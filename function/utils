#!/usr/bin/env bash

function ExitStatusCheck(){
    local Status=${1}
    if [ "${Status}x" != "0x" ]; then
        echo "task failed"
    else
        echo "task done"
    fi
}

function detect_architecture() {
    case "$(uname -i)" in
      x86_64|amd64)
        SYSTEM_ARCH="x86_64";;
      i?86)
        SYSTEM_ARCH="i686";;
      arm*)
        SYSTEM_ARCH="arm";;
      unknown)
        #  uname -i not answer on debian, then:
        case "$(uname -m)" in
          x86_64|amd64)
            SYSTEM_ARCH="x86_64";;
          i?86)
            SYSTEM_ARCH="i686";;
        esac ;;
      *)
        SYSTEM_ARCH="unsupported"
        log_error "Unsupported system architecture"
        exit 1;;
    esac
    log_default "System architecture: ${SYSTEM_ARCH} "
}

function detect_distibutive() {
    DISTRO="$(awk -F'=' '/^NAME=/{print$2}' /etc/os-release)"

    if [ "${DISTRO}" != "Fedora" ]; then
      log_error "Sorry, this script was written for Fedora only"
      exit 1
    fi
    log_default "Distributive: ${DISTRO}"
}

function detect_home() {
    if [ -n "${SUDO_USER}" ]; then
      HOMEDIR="$(eval echo ~"${SUDO_USER}")"
    else
      HOMEDIR="${HOME}"
    fi

    log_default "Home dirrectory: ${HOME}"
}

function InstallPackages(){
    local package

    for package in $(egrep -v '^#|^$' packages.txt); do
        log_info "Installing ${package} : "
        sudo -E dnf -q -y install ${package} > /dev/null 2>&1
        ExitStatusCheck ${?}
    done
}

function update {
	log_info 'Performing system update...'
	sudo dnf distro-sync -y
	# Done
	log_success 'Done.'

	# Check
	EXITSTATUS=$1
	if [[ $EXITSTATUS != 0 ]]; then
		log_success "Finished. System is already up-to-date."
	else
		log_success "Finished. System update complete"
	fi
}